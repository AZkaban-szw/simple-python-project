# .github/workflows/ci.yml
name: Project CI (按文档要求自动检查+测试+Docker构建)

on:
  push:
    branches: [ "main", "staging", "dev" ]  # 触发CI的分支
  pull_request:
    branches: [ "main", "staging", "dev" ]  # PR时触发CI

jobs:
  lint-and-test:
    runs-on: ubuntu-latest  # 使用Linux环境（与Docker构建一致）

    steps:
    - name: 拉取GitHub仓库代码
      uses: actions/checkout@v4

    - name: Set up Python 3.9 (和本地一致)
      uses: actions/setup-python@v5
      with:
        python-version: "3.9"
        cache: "pip"  # 缓存依赖，加速安装

    - name: 安装依赖（从requirements.txt读取）
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 代码检查（flake8）
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics  # 检查严重错误
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=79 --statistics  # 风格检查

    - name: 格式化校验（black）
      run: |
        pip install black
        black --check .  # 检查是否符合black格式

    - name: 运行测试（pytest）
      run: |
        pip install pytest
        pytest app/test_app.py -v  # 修正为实际测试文件路径：app/test_app.py

  build-docker:
    needs: lint-and-test  # 依赖lint-and-test成功后才运行
    runs-on: ubuntu-latest

    steps:
    - name: 拉取代码
      uses: actions/checkout@v4

    - name: 构建Docker镜像
      run: |
        docker build -t ml-sentiment-app:${{ github.sha }} .  # 用commit哈希作为标签

    - name: 验证镜像可运行
      run: |
        docker run --rm ml-sentiment-app:${{ github.sha }} python -c "print('Docker镜像验证成功')"